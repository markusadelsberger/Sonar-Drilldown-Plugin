<%= render :partial => 'header' -%>
<div id="snapshot_title" class="page_title">
<h4>
<%
profile_measure=@snapshot.measure(Metric::PROFILE)
%>
<% if profile_measure %>Profile <%= link_to profile_measure.data, :controller => '/rules_configuration', :action => 'index', :id => profile_measure.value.to_i %> - <% end %>
<% if @snapshot.project_snapshot.periods? %>
<form method="GET" action="<%= url_for :only_path=>true, :overwrite_params => {:period => nil} -%>" style="display: inline">
<select id="select-comparison" name="period" onchange="submit()" class="small">
<option value=""><%= message('time_changes') -%>...</option>
<%= violation_period_select_options(@snapshot, 1) -%>
<%= violation_period_select_options(@snapshot, 2) -%>
<%= violation_period_select_options(@snapshot, 3) -%>
<%= violation_period_select_options(@snapshot, 4) -%>
<%= violation_period_select_options(@snapshot, 5) -%>
</select>
</form>
<% end %>
</h4>
</div>
<table width="100%" cellpadding="0" cellspacing="0" id="columns">
<tr>
<td align="left" width="1%" nowrap class="column first">
<%
value_column = (@period ? "variation_value_#{@period}" : 'value')
max = 0
if @period
blocker_violations=@snapshot.measure('new_blocker_violations')
critical_violations=@snapshot.measure('new_critical_violations')
major_violations=@snapshot.measure('new_major_violations')
minor_violations=@snapshot.measure('new_minor_violations')
info_violations=@snapshot.measure('new_info_violations')
else
blocker_violations=@snapshot.measure('blocker_violations')
critical_violations=@snapshot.measure('critical_violations')
major_violations=@snapshot.measure('major_violations')
minor_violations=@snapshot.measure('minor_violations')
info_violations=@snapshot.measure('info_violations')
end
[blocker_violations, critical_violations, major_violations, minor_violations, info_violations].each do |m|
value = measure_or_variation_value(m)
max = value if value && value>max
end
%>
<h3><%= message('violations_drilldown.col.severity') -%></h3>
<table class="spacedicon" style="border: 1px solid #ccc;">
<%= render :partial => 'rule_priority', :locals => {:css => 'even', :priority_id => Sonar::RulePriority::PRIORITY_BLOCKER, :max => max, :measure => blocker_violations }%>
<%= render :partial => 'rule_priority', :locals => {:css => 'odd', :priority_id => Sonar::RulePriority::PRIORITY_CRITICAL, :max => max, :measure => critical_violations }%>
<%= render :partial => 'rule_priority', :locals => {:css => 'even', :priority_id => Sonar::RulePriority::PRIORITY_MAJOR, :max => max, :measure => major_violations }%>
<%= render :partial => 'rule_priority', :locals => {:css => 'odd', :priority_id => Sonar::RulePriority::PRIORITY_MINOR, :max => max, :measure => minor_violations }%>
<%= render :partial => 'rule_priority', :locals => {:css => 'even', :priority_id => Sonar::RulePriority::PRIORITY_INFO, :max => max, :measure => info_violations }%>
</table>
</td>
<td class="column" align="left" style="white-space: normal;">
<h3><%= message('violations_drilldown.col.rule') -%></h3>
<div class="scrollable">
<table class="spacedicon" width="100%" id="col_rules">
<%
if @period
rule_measures=@snapshot.rule_measures(Metric.by_key('new_violations'), @priority_id)
else
rule_measures=@snapshot.rule_measures(Metric.by_key('violations'), @priority_id)
end
max=0
rule_index=0
rule_measures.each do |m|
value = m.send(value_column) if m
max=value if value && value>max
end
rule_ids=rule_measures.collect{ |measure| measure.rule_id}.uniq
rules = (rule_ids.empty? ? [] : Rule.find(rule_ids))
rules_hash={}
rules.each { |rule| rules_hash[rule.id]=rule }
rule_measures.sort do|x,y|
val=y.rule_priority<=>x.rule_priority
if val==0
x_value=x.send(value_column)
y_value=y.send(value_column)
y_value <=> x_value
else
val
end
end.each do |rule_measure|
value = rule_measure.send(value_column)
next if value.nil? || value==0
rule=rules_hash[rule_measure.rule_id]
clazz = cycle('even', 'odd', :name => 'rules')
clazz = clazz + ' selected' if @rule && @rule.id==rule_measure.rule_id
rule_index+=1
%>
<tr class="<%= clazz -%>">
<td width="1%" nowrap>
<a id="<%= "rule#{rule_index}" -%>" title="<%= message('violations_drilldown.click_for_more_on_x', :params => [rule.plugin_name, rule.plugin_rule_key]) -%>" onclick="window.open(this.href,'rule','height=800,width=900,scrollbars=1,resizable=1');return false;" href="<%= url_for :controller => 'rules', :action => 'show', :id => rule.key, :layout => 'false' -%>"><img src="<%= ApplicationController.root_context -%>/images/priority/<%= rule_measure.rule_priority -%>.png" /></a>
</td>
<td>
<%= link_to(rule.name, {:overwrite_params => {:rule => rule.key, :sid => nil, :priority => Sonar::RulePriority.to_s(@priority_id)}}, :title => "#{rule.plugin_name}: #{rule.plugin_rule_key}") %>
</td>
<td class="right" nowrap="nowrap">
<span><%= @period ? format_variation(rule_measure, :period => @period, :style => 'light') : rule_measure.formatted_value -%></span>
</td>
<td class="left last">
<%= barchart(:width => 70, :percent => (100 * value / max).to_i, :color => (@period ? '#cc0000' : '#777'))  if max>0 %>
<!--[if IE]> &nbsp; &nbsp; <![endif]-->
</td>
</tr>
<% end %>
<% if rule_index==0 %>
<tr class="even"><td><%= message('violations_drilldown.no_violations') -%></td></tr>
<% end %>
</table>
</div>
</td>
</tr>
</table>
<br/>
<table width="100%">
<tr>
<%
paths=[]
rids=[]
column_width=(100/@drilldown.columns.size).to_i if @drilldown.columns.size>0
@drilldown.columns.each_with_index do |column, index|
%><td class="column <%= 'first' if index==0 -%>" nowrap width="<%= column_width -%>%">
<div class="scrollable" id="col_<%= column.scope -%>">
<table class="spaced">
<%
column.measures.each do |measure|
resource=column.resource(measure)
clazz = cycle('even', 'odd', :name => "col_#{column.scope}")
if column.selected_snapshot && column.selected_snapshot.project_id==resource.id
clazz += ' selected'
paths << [h(resource.name), @selected_rids-[resource.id]]
end
%>
<tr class="<%= clazz -%>">
<td nowrap>
<%
if resource.entity?
if resource.copy_resource_id %>
<%= qualifier_icon(resource) %>
<%= link_to(h(resource.name), {:only_path => true, :overwrite_params => {:rids => nil, :id => resource.copy_resource_id}}) -%>
<% else %>
<%= qualifier_icon(resource) %>
<a href="#" onclick="d(<%= resource.id -%>, '<%= @period_index -%>', '<%= @rule ? @rule.key : params[:priority] -%>');" alt="<%= resource.name(true) -%>" title="<%= resource.name(true) -%>"><%= resource.name(false) %></a>
<%
end
else %>
<%= link_to(image_tag('zoom.png'), {:id => resource.id}, {:class => 'nolink'}) %>
<%= qualifier_icon(resource) %>
<%= link_to(h(resource.name), {:only_path => true, :overwrite_params => {:rids => rids + [resource.id]}}) -%>
<% end %>
</td>
<td class="right last" nowrap>
<%= @period ? format_variation(measure, :period => @period, :style => 'light') : measure.formatted_value -%>
<!--[if IE]> &nbsp; &nbsp; <![endif]-->
</td>
</tr>
<% end %>
</table>
</div>
</td>
<%
rids<<column.selected_snapshot.project_id if column.selected_snapshot
end %>
</tr>
</table>
<br/>
<div style="font-size: 85%;background-color: #eee;color: #777;padding: 4px 5px;border: 1px solid #ddd;margin-bottom: 20px;">
<b><%= message('violations_drilldown.path') -%>:</b>
<% if @priority_id %>
<%= Sonar::RulePriority.to_s(@priority_id, true) %> <%= link_to message('clear_verb'), {:overwrite_params => {:priority => nil}} %>
<% else %>
<%= message('violations_drilldown.any_severity') -%>
<% end %>&nbsp;&raquo;&nbsp;
<% if @rule %>
<%= h @rule.name %> <%= link_to message('clear_verb'), {:overwrite_params => {:rule => nil}} %>
<% else %>
<%= message('violations_drilldown.any_rule') -%>
<% end %>&nbsp;&raquo;&nbsp;
<% paths.each do |path| %>
<%= path[0] %> <%= link_to message('clear_verb'), {:overwrite_params => {:rids => path[1]}} %>&nbsp;&raquo;&nbsp;
<% end %>
</div>
<script>
$$('#col_rules tr.selected').each(function(item) {item.scrollIntoView(true);});
<% @drilldown.columns.each do |column| %>
$$('#col_<%= column.scope -%> tr.selected').each(function(item) {item.scrollIntoView(true);});
<% end %>
<% if @drilldown.highlighted_resource %>
d(<%= @drilldown.highlighted_resource.id -%>);
<% end %>
</script>
<%= render :partial => 'footer' -%>
